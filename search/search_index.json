{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>Want to know who we are? Read up on our website.</p>"},{"location":"#what-is-this-site-about","title":"What is this site about?","text":"<p>This site is a public documentation area for our product and services. It is continously updated by the respective product teams.</p>"},{"location":"Generic/","title":"Generic","text":"<p>This is currently a work in progress and more will come here...</p>"},{"location":"Generic/shared_teams_channel/","title":"Shared Teams channel","text":"<p>Hello there! If you have gotten the link to this guide shared with you, it means that Amesto Fortytwo AS have already agreed to set up a shared channel between our organizations, and we've prepared the setup on our side. This guide is for you to set up and verify the needed configuration in your tenant to be able to join the shared channel.</p>"},{"location":"Generic/shared_teams_channel/#configure-cross-tenant-access-settings-in-entra-id","title":"Configure cross-tenant access settings in Entra ID","text":"RBAC roles needed <p>User with Security Administrator or Global Administrator role is needed to make these changes in Entra ID.</p> Time to effect <p>Changes to cross-tenant access settings may take up to six hours to take effect.</p> <p>Sign in to Entra admin center using your account with the required access. Under \"Identity\" in the menu, select \"External Identities\", and then select \"Cross-tenant access settings\".</p> <p></p> <p>Select the tab \"Organizational settings\", and then click \"Add organization\". On the \"Add organization\" pane, type the full domain name for our organization \"amesto.no\" and press \"Enter\". It should populate the field \"Name\" with \"Amesto\", and then click the button for \"Add\".</p> <p></p> <p>Our organization should appear in the organizations list. At this point, all access settings for this organization are inherited from your default settings.</p>"},{"location":"Generic/shared_teams_channel/#configure-outbound-settings","title":"Configure outbound settings","text":"<p>Select the \"Outbound access\" link for our organization.</p> <p></p> <p>On the \"B2B direct connect\" tab, click the button for \"Customize settings\". On the \"External users and groups\" tab, choose \"Allow access\" and set \"Applies to\" to a group or spesific users, or to \"All &lt;org.name&gt; users\" if you allow all users in your organization to be invited to shared channels.</p> <p></p> <p>On the \"External applications\" tab, choose \"Allow access\" and \"Select external applications\". Click \"Add Microsoft applications\".</p> <p></p> <p>Select the \"Office 365\" application, and then click the button \"Select\".</p> <p></p> <p>Click the button \"Save\", choose \"Yes\" to confirm, and close the \"Outbound access settings\" blade.</p>"},{"location":"Generic/shared_teams_channel/#verify-teams-configuration","title":"Verify Teams configuration","text":"RBAC roles needed <p>User with Teams Administrator role is needed to make these changes in Teams.</p> <p>Shared channels is enabled by default in Teams. Follow this procedure to confirm the settings.</p>"},{"location":"Generic/shared_teams_channel/#verify-teams-policy","title":"Verify Teams policy","text":"<p>In the Teams admin center, expand \"Teams\", and then select \"Teams policies\".</p> <p></p> <p>Select the policy that applies to the user(s) that should be allowed to be invited to external channels. If you've previously done no customization, only \"Global (org wide default)\" will be listed. Select \"Edit\" on the policy.</p> <p></p> <p>Make sure that \"Join external shared channels\" is set to \"On\". If it is \"Off\", click the toggle to turn it on, and then click \"Apply\".</p>"},{"location":"Generic/shared_teams_channel/#completion","title":"Completion","text":"<p>You have now completed the configuration needed to join the shared channel. Please give us feedback that is done.</p>"},{"location":"Generic/shared_teams_channel/#references","title":"References","text":"<ul> <li>Collaborate with external participants in a shared channel (IT Admins)</li> <li>Video demonstration</li> </ul>"},{"location":"Managed%20Azure%20AD%20B2C/","title":"Managed Azure AD B2C","text":"<p>This is currently a work in progress and more will come here...</p>"},{"location":"Security%20Posture%20Portal/","title":"Amesto Fortytwo Security Posture portal for Microsoft 365","text":""},{"location":"Security%20Posture%20Portal/#intro","title":"Intro","text":"<p>More commercial information can be read here</p> <p>A solution that monitors your Microsoft 365 configuration and compares it to best practices.</p> <p>In an ever-evolving landscape of threats, making sure your Microsoft 365 environment is as secure as possible while also maintaining usability is difficult.</p> <p>Introducing Amesto Fortytwo Security Posture for Microsoft 365, a solution that continuously monitors your Microsoft 365 configuration and compares it to best practices.</p> <p>All your Microsoft 365 configuration with possible improvements will be reported with an explanation of why we check for this, an explanation on the consequence of following that best practice is, and a detailed guide on how to configure your environment in a best practice manner.</p>"},{"location":"Security%20Posture%20Portal/#what-does-this-solution-solve","title":"What does this solution solve?","text":"<p>We see a lot of customers that are managing their own Microsoft 365 tenant \u2013 which is great. However, many of these customers only have knowledge about 20 to 40 percent of Microsoft 365, while the rest is running happily on default settings. This might have been good enough up until now, but with threat actors setting their eyes on Microsoft 365, a 100% coverage is necessary.</p> <p>Among other things, the portal lets you discover service principals with too much access, makes you discover paths to Global Administrator that you might not be aware of and ensures that you have Privileged Identity Management configured in a proper fashion.</p>"},{"location":"Security%20Posture%20Portal/#can-you-see-my-company-data","title":"Can you see my company data?","text":"<p>No. We can only see your Microsoft 365 configuration, and do not have any access to company documents or other data.</p>"},{"location":"Security%20Posture%20Portal/#can-you-be-breached-and-used-as-an-attack-vector-into-my-tenant","title":"Can you be breached and used as an attack vector into my tenant?","text":"<p>Not really. We only have read access to your Microsoft 365 configuration.</p>"},{"location":"Security%20Posture%20Portal/#isnt-this-just-secure-score-and-recommendations-in-the-azure-portal","title":"Isn\u2019t this just Secure Score and recommendations in the Azure Portal?","text":"<p>No. While Secure Score is great, it is very limited and only checks a few very basic things. It does not check for holes in your conditional access policies, not for the use of SPF/DMARC/DKIM in your environment, not for policies for user app consent, or the other hundreds of checks in this portal.</p>"},{"location":"Security%20Posture%20Portal/#azure-marketplace","title":"Azure Marketplace","text":"<p>The portal is available through Microsoft Azure Marketplace </p>"},{"location":"Security%20Posture%20Portal/#public-roadmap","title":"Public Roadmap","text":"<p>Our portal is under continuous development and we regularly update our Public Roadmap, which can be found here. If you have any suggestions, ideas, or feedback, we would greatly appreciate hearing from you. Please reach out to us at Assistance email.</p>"},{"location":"Security%20Posture%20Portal/01_gettingstarted/","title":"Getting started","text":"<p>This is an detailed description of how to setup our Security Posture Portal from Azure Marketplace. The steps are pritty much easy to understand but we have documented every step here in this guide.</p>"},{"location":"Security%20Posture%20Portal/01_gettingstarted/#setup-through-azure-marketplace","title":"Setup through Azure Marketplace","text":""},{"location":"Security%20Posture%20Portal/01_gettingstarted/#install-the-app-from-azure-marketplace","title":"Install the app from Azure marketplace","text":"<ol> <li>Go to our Azure Marketplace Product page</li> <li>Click <code>Get it now</code></li> </ol> <p> 3. Fill out contact details and click <code>Continue</code></p> <p> 4. You are now taken to the Azure portal. Choose <code>Standard</code> on the Plan dropdown and click <code>Subscribe</code></p> <p> 5. Now take the appropiate actions on the following:</p>"},{"location":"Security%20Posture%20Portal/01_gettingstarted/#configure-your-azure-environment","title":"Configure your Azure environment","text":"<p>Note</p> <p>To be able to add the Security Posture Portal to your tenant you need at least <code>Contributor</code> access </p> <ol> <li>Configure your tenant environment.<ul> <li>Choose which Azure subscription you would like to add the app to.</li> <li>Choose which Resource group the app should live in. Choose \"New\" if you dont have any.</li> <li>Give the app an appropiate name <code>Amesto Fortytwo Security Posture Portal</code></li> <li>Choose <code>On</code> on Recurring billing.</li> </ul> </li> </ol> <p> 2. When you are ready click <code>Review + subscribe</code> to start the setup of the portal.</p> <p> 3. The setup will take a couple of minutes. When its done you will be asked to <code>Go to the publisher site to finish setup</code>. You are now being redirected to our onboarding page</p>"},{"location":"Security%20Posture%20Portal/01_gettingstarted/#run-through-our-onboarding-wizard","title":"Run through our onboarding wizard","text":"<ol> <li> <p>Approve/Consent our Single Signon Application. This is to that you can access the portal with your own Microsoft 365 account.</p> </li> <li> <p>Give our enterprise app <code>Amesto Fortytwo Portal</code> read permissions to your tenant.</p> </li> </ol> <p>Info</p> <p>This app is required for us to read the configuration in your tenant. Our app only has Read permissions for configurations elements and we will not every be able to reads any of your users data.</p> <p></p> <ol> <li> <p>Setup Exchange and Teams permissions Follow the guide on the onboarding steps.</p> </li> <li> <p>Give yourself and users permissions Follow the guide on the onboarding steps.</p> </li> <li> <p>Navigate to the portal Follow the guide on the onboarding steps.</p> </li> </ol> <p>Note</p> <p>If you have any issues contact us on assistance@amestofortytwo.com</p>"},{"location":"Security%20Posture%20Portal/02_faq/","title":"FAQ","text":""},{"location":"Security%20Posture%20Portal/02_faq/#does-this-replace-microsoft-defender-andor-e5-license","title":"Does this replace Microsoft Defender and/or E5 License?","text":"<p>No. This isn't just a tool; it's a tailored solution ensuring the security of your Microsoft 365 environment, aligned with the licenses you hold. For instance, E5 users receive recommendations not visible to E3 customers. Our goal? To optimize your security posture precisely for your licensing tier.</p>"},{"location":"Security%20Posture%20Portal/02_faq/#is-the-pricing-fixed-no-matter-size-of-our-business","title":"Is the pricing fixed no matter size of our business?","text":"<p>Yes, our pricing is based on modules, no matter how big or small you business is!</p>"},{"location":"Security%20Posture%20Portal/02_faq/#does-this-require-changes-in-our-microsoft-365-environment","title":"Does this require changes in our Microsoft 365 environment?","text":"<p>We only need one enterprise app registration in your Azure AD that you are in total control of. You can delete or stop our access whenever you want.</p>"},{"location":"Security%20Posture%20Portal/02_faq/#will-fortytwo-develop-more-modules","title":"Will Fortytwo develop more modules?","text":"<p>Yes, we have a big roadmap for future modules. Stay updated on our Public Roadmap.</p>"},{"location":"Security%20Posture%20Portal/02_faq/#how-is-billing-done","title":"How is billing done?","text":"<p>Billing is done through Azure Marketplace and we will add billing to your CSP invoice from Microsoft.</p>"},{"location":"Security%20Posture%20Portal/02_faq/#can-i-cancel-whenever-i-want","title":"Can I cancel whenever i want?","text":"<p>Yes, we have no lock-in. You can easily cancel the subscription in your Microsoft 365 Admin portal. See how here</p>"},{"location":"Security%20Posture%20Portal/02_faq/#where-can-i-read-terms-and-conditions","title":"Where can I read Terms and Conditions?","text":"<p>You can read terms and conditions here</p>"},{"location":"Security%20Posture%20Portal/02_faq/#where-is-my-data-stored","title":"Where is my data stored?","text":"<p>We store policy results in a database in Azure Western Europe. All access are controlled and managed by yourself from your own Entra ID.</p>"},{"location":"Security%20Posture%20Portal/02_faq/#i-want-to-re-sell-this-to-my-customers","title":"I want to re-sell this to my customers","text":"<p>Sure! We have a partner program. Send us an email</p>"},{"location":"Security%20Posture%20Portal/03_cancelsubscription/","title":"Cancel SaaS subscription","text":"<p>To cancel your subscription of the portal is very easy and are done through your Azure portal. Follow the steps below to cancel at any point.</p> <ol> <li>Go to the Azure portal.</li> <li>In the global search box at the top of the page, enter SaaS and then under Services, select SaaS. Shortcut here</li> </ol> <p> 3. Find the SaaS offering named <code>Security Posture for Microsoft 365</code> and click it. 4. Choose \"Cancel Subscription\" on the SaaS app and follow the screen instructions.</p> <p></p> <p>Note</p> <p>If you have any issues contact us on assistance@amestofortytwo.com .</p>"},{"location":"Self%20Hosted%20Runners/","title":"Self Hosted Runners","text":"<p>Do you need self hosted runners for Azure DevOps og GitHub, and simply want to have the same runners as Microsoft's Hosted Runners without any more fuzz? Look no further. This solution uses an image that is continuously updated with the same cadence as the Microsoft Hosted Runners, with the same application versions installed.</p>"},{"location":"Self%20Hosted%20Runners/#can-you-see-my-data","title":"Can you see my data?","text":"<p>No, this is simply a configuration of a Virtual machine scale set using published VM images and contains no call home functionality or similar.</p>"},{"location":"Self%20Hosted%20Runners/#can-you-access-my-virtual-machines","title":"Can you access my virtual machines?","text":"<p>No, you control everything yourself.</p>"},{"location":"Self%20Hosted%20Runners/#why-do-you-recommend-using-a-virtual-machine-scale-set","title":"Why do you recommend using a Virtual Machine Scale Set?","text":"<p>We recommend using a Virtual Machine Scale Set because it can continuously grab the latest image from Azure Marketplace, ensuring that you always have the latest runner, and because it can be used to automatically scale up and down the number of agents you have available, without you needing to worry about it. It is also cheaper, as you do not need to run many idle agents.</p>"},{"location":"Self%20Hosted%20Runners/#how-do-i-configure-this","title":"How do I configure this?","text":"<p>Follow one of these:</p> <ul> <li>Azure DevOps</li> <li>GitHub</li> </ul>"},{"location":"Self%20Hosted%20Runners/Azure%20DevOps/","title":"Configuring Azure DevOps self hosted runners using VMSS","text":"<p>This documentation shows you how to configure an Azure Virtual Machine Scale Set (VMSS) that will always be running the latest Self Hosted Runner image, and connecting the VMSS as an agent pool in Azure DevOps. Using a VMSS in Azure DevOps gives you the ability to automatically increase and decrease the number of active runners dynamically based on pipeline demand. Additionally, the VMSS will always create instances based on the latest runner image published to the Azure Marketplace, so you will never need to worry about updating the operating system and toolkit - just like the Microsoft Hosted Runners!</p> <p>To configure, you need to follow the three steps below:</p> <ol> <li>Configuring the Virtual Machine Scale Set</li> <li>Adding the VMSS as an Azure DevOps Agent Pool</li> <li>Testing the self hosted runner (Not really required)</li> </ol>"},{"location":"Self%20Hosted%20Runners/Azure%20DevOps/#select-your-deployment-option","title":"Select your deployment option:","text":"<ul> <li>Manual configuration in the Azure Portal</li> <li>Deploy using Terraform</li> </ul>"},{"location":"Self%20Hosted%20Runners/Azure%20DevOps/step1-manual/","title":"Step 1a - Configuring the Virtual Machine Scale Set manually","text":"<p>Note: If you do not want to handle the creation of the VMSS manually, you can use our other methods instead.</p> <p>Start by going to the Azure Portal and click +Create a resource. </p> <p></p> <p>Search for Virtual Machine Scale Set, click on the result and click Create</p> <p></p>"},{"location":"Self%20Hosted%20Runners/Azure%20DevOps/step1-manual/#basics","title":"Basics","text":"<ul> <li>Project details<ul> <li>Subscription - A subscription you have contributor access to<ul> <li>Resource group - A new or existing resource group</li> </ul> </li> </ul> </li> <li>Scale set details<ul> <li>Virtual machine scale set name - The name of the scale set itself. Cannot be changed after deployment, but everything is stateless, so you can simply deploy a new scale set if needed.</li> <li>Region - The region where you want your runners to be located</li> <li>Availability zone - Configure to None in order to allow for a cluster with few running instances</li> </ul> </li> <li>Orchestration<ul> <li>Orchestration mode - Configure to Uniform, as we will be running only a single image and runner type</li> <li>Security type - Standard is the only supported for our image currently</li> </ul> </li> <li> <p>Instance details</p> <ul> <li>Image - Locate the Amesto Fortytwo Self Hosted Runner for Azure DevOps image and select whether you want an Ubuntu or Windows based runner:</li> </ul> <p></p> <ul> <li>Run with Azure Spot discount - Only select this if you know how to handle spot, and if your pipelines can tolerate evictions</li> <li>Size - Choose the virtual machine size you want to run the runners as</li> <li>Administrator account</li> <li>Configure an administrator account for you virtual machines</li> </ul> </li> </ul> <p> </p>"},{"location":"Self%20Hosted%20Runners/Azure%20DevOps/step1-manual/#spot","title":"Spot","text":"<p>Skip configuring Spot unless you chose to Run with Azure spot discount.</p>"},{"location":"Self%20Hosted%20Runners/Azure%20DevOps/step1-manual/#disks","title":"Disks","text":"<p>Leave Disks as default and go to the next page.</p>"},{"location":"Self%20Hosted%20Runners/Azure%20DevOps/step1-manual/#networking","title":"Networking","text":"<p>On the Networking page, you can choose between creating a new network or reuse an existing one. You can easily connect to a virtual network that is peered into a Azure Landing Zones solution and use private endpoints and stuff. Please be aware that the runners require internet connectivity in order to reach Azure DevOps.</p> <ul> <li>Load balancing options - Choose None, as Azure DevOps takes care of this</li> </ul> <p>The default settings will work just fine in most cases:</p> <p></p>"},{"location":"Self%20Hosted%20Runners/Azure%20DevOps/step1-manual/#scaling","title":"Scaling","text":"<p>For scaling, Azure DevOps will take care of everything. However, you should configure Initial instance count to 0, as we need to configure the VMSS for Azure DevOps connectivity before creating our instances.</p> <p></p>"},{"location":"Self%20Hosted%20Runners/Azure%20DevOps/step1-manual/#management-health-advanced-and-tags","title":"Management, Health, Advanced and Tags","text":"<p>No need to configure any of this. Just click next and complete the deployment of VMSS.</p> <p></p>"},{"location":"Self%20Hosted%20Runners/Azure%20DevOps/step1-manual/#final-configuration","title":"Final configuration","text":"<p>After successfully creating the VMSS instance, click Go to resource</p> <p></p> <p>Under Upgrade policy, switch from manual to Automatic.</p> <p></p> <p>Continue to step 2 - Configuring the Azure DevOps Agent Pool</p>"},{"location":"Self%20Hosted%20Runners/Azure%20DevOps/step1-terraform/","title":"Step 1b - Configuring the Virtual Machine Scale Set using Terraform","text":""},{"location":"Self%20Hosted%20Runners/Azure%20DevOps/step1-terraform/#prereqs","title":"Prereqs","text":"<ul> <li>Terraform installed</li> <li>Azure CLI installed</li> </ul>"},{"location":"Self%20Hosted%20Runners/Azure%20DevOps/step1-terraform/#deployment","title":"Deployment","text":"<p>We have published this Terraform module for simplified deployment. If you are not familiar with using Terraform, consider using the manual method instead, but it should be fairly easy for most people. </p> <p>Start by creating an empty folder with a single file <code>main.tf</code>, with the below content:</p> <pre><code>provider \"azurerm\" {\nfeatures {}\n}\nmodule \"vmss\" {\nsource                         = \"amestofortytwo/selfhostedrunnervmss/azurerm\"\noperating_system               = \"ubuntu\"       # windows or ubuntu\nrunner_platform                = \"azure_devops\" # azure_devops or github\n}\n</code></pre> <p>Next, open a shell (cmd, terminal, powershell) and run the following:</p> <pre><code>az login\naz account set --subscription \"&lt;your subscription id&gt;\"\naz vm image terms accept --offer self_hosted_runner_ado --plan ubuntu_latest --publisher amestofortytwoas1653635920536\naz vm image terms accept --offer self_hosted_runner_ado --plan windows_latest --publisher amestofortytwoas1653635920536\nterraform init\nterraform apply\n</code></pre> <p>Continue to step 2 - Configuring the Azure DevOps Agent Pool</p>"},{"location":"Self%20Hosted%20Runners/Azure%20DevOps/step2/","title":"Step 2 - Configuring the Azure DevOps Agent Pool","text":"<p>Now the the VMSS is up and running, we are ready to configure the Azure DevOps side of things. </p> <p>On the organization level (not while in a project), go to Organization settings</p> <p>Find Agent pools and click Add pools</p> <p></p> <p>Select Azure virtual machine scale set</p> <p></p> <p>Find you VMSS and name your pool:</p> <p></p> <p>Configure your preferred Pool options. We recommend having at least 1 agent on standby, though if cost is an issue, you can set it to 0 (you will have longer wait times for your first run due to provisioning the instance)</p> <p></p> <p>Click Create.</p> <p>You should now be ready to use the VMSS as runners. After configuring the DevOps side of things, you should see the following extension added to your VMSS:</p> <p></p> <p>Continue to step 3 - Testing the self hosted runner</p>"},{"location":"Self%20Hosted%20Runners/Azure%20DevOps/step3/","title":"Step 3 - Testing the self hosted runner","text":"<p>The following is an example pipeline using the pool we just created:</p> <pre><code>stages:\n- stage: run\ndisplayName: Run\njobs:\n- job: run\ndisplayName: Run\npool: SelfHostedRunnerUbuntu # Name of your VMSS pool\nsteps:\n- task: PowerShell@2\nname: Test\ndisplayName: \"Test\"\ninputs:\ntargetType: inline\npwsh: true\nscript: uname -a\n</code></pre> <p>After running the pipeline, you should see that an agent has come online:</p> <p></p> <p>And from the VMSS side of things, we can see that an instance has been created:</p> <p></p> <p>And of course, we can see that the pipeline is working just fine:</p> <p></p> <p>That's it, you now have an agent pool in Azure DevOps, that will automatically be updated whenever the Microsoft Hosted Runners are updated (through our image). Have fun!</p>"},{"location":"Self%20Hosted%20Runners/GitHub/","title":"Configuring GitHub self hosted runners using VMSS","text":"<p>This documentation shows you how to configure an Azure Virtual Machine Scale Set (VMSS) that will always be running the latest Self Hosted Runner image, as well as configuring the VMSS instances to automatically register as self hosted runners in your GitHub organization or repository. Using a VMSS gives you the ability easily increase and decrease the number of active runners whenever you want, manually for now, but it is possible to automate. Additionally, the VMSS will always create instances based on the latest runner image published to the Azure Marketplace, so you will never need to worry about updating the operating system and toolkit - just like the hosted runners!</p> <p>To configure, you need to follow the three steps below:</p> <ol> <li>Configuring the Virtual Machine Scale Set</li> <li>Configuring the VMSS instances to automatically register to GitHub</li> <li>Testing the self hosted runner (Not really required)</li> </ol>"},{"location":"Self%20Hosted%20Runners/GitHub/#select-your-deployment-option","title":"Select your deployment option:","text":"<ul> <li>Manual configuration in the Azure Portal</li> <li>Deploy using Terraform</li> </ul>"},{"location":"Self%20Hosted%20Runners/GitHub/step1-manual/","title":"Step 1a - Configuring the Virtual Machine Scale Set manually","text":"<p>Note: If you do not want to handle the creation of the VMSS manually, you can use our other methods instead.</p> <p>Start by going to the Azure Portal and click +Create a resource. </p> <p></p> <p>Search for Virtual Machine Scale Set, click on the result and click Create</p> <p></p>"},{"location":"Self%20Hosted%20Runners/GitHub/step1-manual/#basics","title":"Basics","text":"<ul> <li>Project details<ul> <li>Subscription - A subscription you have contributor access to<ul> <li>Resource group - A new or existing resource group</li> </ul> </li> </ul> </li> <li>Scale set details<ul> <li>Virtual machine scale set name - The name of the scale set itself. Cannot be changed after deployment, but everything is stateless, so you can simply deploy a new scale set if needed.</li> <li>Region - The region where you want your runners to be located</li> <li>Availability zone - Configure to None in order to allow for a cluster with few running instances</li> </ul> </li> <li>Orchestration<ul> <li>Orchestration mode - Configure to Uniform, as we will be running only a single image and runner type</li> <li>Security type - Standard is the only supported for our image currently</li> </ul> </li> <li> <p>Instance details</p> <ul> <li>Image - Locate the Amesto Fortytwo Self Hosted Runner for Azure GitHub image and select whether you want an Ubuntu or Windows based runner:</li> </ul> <p></p> <ul> <li>Run with Azure Spot discount - Only select this if you know how to handle spot, and if your pipelines can tolerate evictions</li> <li>Size - Choose the virtual machine size you want to run the runners as</li> <li>Administrator account</li> <li>Configure an administrator account for you virtual machines</li> </ul> </li> </ul> <p> </p>"},{"location":"Self%20Hosted%20Runners/GitHub/step1-manual/#spot","title":"Spot","text":"<p>Skip configuring Spot unless you chose to Run with Azure spot discount.</p>"},{"location":"Self%20Hosted%20Runners/GitHub/step1-manual/#disks","title":"Disks","text":"<p>Leave Disks as default and go to the next page.</p>"},{"location":"Self%20Hosted%20Runners/GitHub/step1-manual/#networking","title":"Networking","text":"<p>On the Networking page, you can choose between creating a new network or reuse an existing one. You can easily connect to a virtual network that is peered into a Azure Landing Zones solution and use private endpoints and stuff. Please be aware that the runners require internet connectivity in order to reach GitHub.</p> <ul> <li>Load balancing options - Choose None, as GitHub takes care of this</li> </ul> <p>The default settings will work just fine in most cases:</p> <p></p>"},{"location":"Self%20Hosted%20Runners/GitHub/step1-manual/#scaling","title":"Scaling","text":"<p>For scaling, you should configure Initial instance count to 0, as we need to configure the VMSS for Github connectivity before creating our first instances.</p> <p></p>"},{"location":"Self%20Hosted%20Runners/GitHub/step1-manual/#management-health-advanced-and-tags","title":"Management, Health, Advanced and Tags","text":"<p>No need to configure any of this. Just click next and complete the deployment of VMSS.</p> <p></p>"},{"location":"Self%20Hosted%20Runners/GitHub/step1-manual/#final-configuration","title":"Final configuration","text":"<p>After successfully creating the VMSS instance, click Go to resource</p> <p></p> <p>Under Upgrade policy, switch from manual to Automatic.</p> <p></p> <p>Continue to step 2 - Configuring the virtual machine scale set for auto registration</p>"},{"location":"Self%20Hosted%20Runners/GitHub/step1-terraform/","title":"Step 1b - Configuring the Virtual Machine Scale Set using Terraform","text":""},{"location":"Self%20Hosted%20Runners/GitHub/step1-terraform/#prereqs","title":"Prereqs","text":"<ul> <li>Terraform installed</li> <li>Azure CLI installed</li> </ul>"},{"location":"Self%20Hosted%20Runners/GitHub/step1-terraform/#deployment","title":"Deployment","text":"<p>We have published this Terraform module for simplified deployment. If you are not familiar with using Terraform, consider using the manual method instead, but it should be fairly easy for most people. </p> <p>Start by creating an empty folder with a single file <code>main.tf</code>, with the below content:</p> <pre><code>provider \"azurerm\" {\nfeatures {}\n}\nmodule \"vmss\" {\nsource                         = \"amestofortytwo/selfhostedrunnervmss/azurerm\"\noperating_system               = \"ubuntu\"       # windows or ubuntu\nrunner_platform                = \"github\"       # azure_devops or github\n}\n</code></pre> <p>Next, open a shell (cmd, terminal, powershell) and run the following:</p> <pre><code>az login\naz account set --subscription \"&lt;your subscription id&gt;\"\naz vm image terms accept --offer self_hosted_runner_github --plan ubuntu_latest --publisher amestofortytwoas1653635920536\naz vm image terms accept --offer self_hosted_runner_github --plan windows-latest --publisher amestofortytwoas1653635920536\nterraform init\nterraform apply\n</code></pre> <p>Continue to step 2 - Configuring the virtual machine scale set for auto registration</p>"},{"location":"Self%20Hosted%20Runners/GitHub/step2/","title":"Step 2 - Configuring the virtual machine scale set for auto registration","text":"<p>Now the the VMSS is up and running, we are ready to configure the Github runner.</p>"},{"location":"Self%20Hosted%20Runners/GitHub/step2/#get-a-pat-from-github-for-either-repo-or-organization","title":"Get a PAT from Github for either repo or organization","text":"<p>If you are registering the runners for a repo, the PAT needs to have access to \"repo\". If you are registering the runners for an organization, the PAT needs to have access to \"manage_runners:org\". To register a PAT, go to \"Settings\" -&gt; \"Developer settings\" -&gt; \"Personal access tokens\" -&gt; \"Tokens (classic) and click \"Generate new token\".</p> <p></p>"},{"location":"Self%20Hosted%20Runners/GitHub/step2/#configure-the-vmss-to-auto-register","title":"Configure the VMSS to auto register","text":"<p>Run the following with az-cli to configure an extension on the VMSS that will auto register the runner with Github. Replace the variables with your correct information.</p> <pre><code>VMSS=vmss-test-noeast\nRG=rg-test-noeast\nPAT=ghp_xxx\nORG=amesfortytwo\nUSER=admin42\nLABEL=label1,label2\naz vmss extension set --vmss-name $VMSS --name customScript --resource-group $RG \\\n--version 2.1 --publisher Microsoft.Azure.Extensions \\\n--protected-settings \"{\\\"fileUris\\\": [\\\"https://raw.githubusercontent.com/amestofortytwo/terraform-azurerm-selfhostedrunnervmss/main/scripts/script.sh\\\"],\\\"commandToExecute\\\": \\\"sh script.sh $ORG $PAT $USER $LABEL\\\"}\"\n</code></pre> <p>Scale up the VMSS to at least 1 instance. This can be done in the Azure Portal or with az-cli. Currently you would need to manually scale the number of instances of the VMSS to the number you want.</p> <p></p>"},{"location":"Self%20Hosted%20Runners/GitHub/step2/#verify-that-the-runner-is-registered","title":"Verify that the runner is registered","text":"<p>After the previous has been done, you should be able to verify within the organization or the repository that the runner is registered.</p> <p></p> <p>Continue to step 3 - Testing the self hosted runner</p>"},{"location":"Self%20Hosted%20Runners/GitHub/step3/","title":"Step 3 - Testing the self hosted runner","text":"<p>The following is an example pipeline using the pool we just created:</p> <pre><code>---\nname: test on:\nworkflow_dispatch:\npermissions:\ncontents: write\njobs:\ndeploy:\nruns-on: self-hosted\nsteps:\n- uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4.0.0\n- name: Run a command\nshell: pwsh\nrun: Write-Host \"Hello World\"\n</code></pre> <p>We can see that the pipeline is working just fine:</p> <p></p> <p>That's it, you now have an agent pool in Github, that will automatically be updated whenever the Microsoft Hosted Runners are updated (through our image). Have fun!</p>"}]}